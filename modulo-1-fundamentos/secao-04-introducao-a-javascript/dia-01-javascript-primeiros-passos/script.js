/*
Vari√°veis
    #para fixar!!

- Crie uma constante chamada myName e atribua a ela o seu nome (Exemplo: Carolina).
- Crie uma constante chamada birthCity e atribua a ela a sua cidade natal.
- Crie uma vari√°vel let chamada birthYear e atribua a ela o ano em que voc√™ nasceu.
- Utilize o console.log() para imprimir as constantes e vari√°veis que voc√™ criou.
- Altere o valor atribu√≠do √† vari√°vel birthYear para 2030. Fa√ßa um console.log (birthYear) novamente para ver o que acontece!
- Altere o valor atribu√≠do √† constante birthCity. Fa√ßa um console.log(birthCity) novamente! Voc√™ saberia explicar por que recebemos uma mensagem de erro? ü§î
*/
/*
const myName = "Marcela";
const birthCity = "Rio de Janeiro";
let birthYear = 1995;

console.log(myName);
console.log(birthCity);
console.log(birthYear);

birthYear = 2030;
console.log(birthYear);

birthCity = "S√£o Paulo";
console.log(birthYear); // uma msg de erro aparece ("TypeError: Assignment to constant variable") porque eu tentei reatribuir um valor √† uma vari√°vel constante, o que n√£o √© poss√≠vel!
*/
/*
Tipos primitivos, tipagem din√¢mica e opera√ß√µes aritm√©ticas

No exemplo abaixo, temos as informa√ß√µes de um paciente. Utilize o operador typeof para imprimir qual o tipo das vari√°veis patientId, isEnrolled, patientInfo e patientEmail. Esse operador retorna qual o tipo de uma vari√°vel, objeto, fun√ß√£o ou express√£o? Exemplo: console.log(typeof patientId) retornar√° number.
*/
/*
let patientId = 50;
let isEnrolled = true; 
const patientInfo = {
  firstName: 'Ana',
  lastName: 'Santos',
};
const patientEmail = 'ana@email.com';

console.log(typeof patientId); //number
console.log(typeof isEnrolled); //boolean
console.log(typeof patientInfo); //object
console.log(typeof patientEmail); //string
*/
/*
O que aconteceria se tent√°ssemos checar qual o tipo da vari√°vel patientAge? Experimente executar o comando console.log(typeof patientAge) e veja o que acontece! U√©‚Ä¶ mas n√£o declaramos essa vari√°vel, n√£o √© mesmo? √â exatamente por esse motivo que o seu tipo √© undefined, como voc√™ p√¥de observar no retorno do console.log(typeof patientAge). Experimente tamb√©m trocar o valor de patientId = 50 para patientId = '50'. Execute novamente um console.log() para imprimir o tipo dessa vari√°vel ap√≥s a modifica√ß√£o. Voc√™ ver√° que o retorno agora √© uma string, pois colocamos o n√∫mero 50 dentro das aspas. O JavaScript interpreta como string tudo o que estiver entre aspas.
*/
/*
console.log(typeof patientAge); //undefined, porque essa vari√°vel n√£o foi declarada
patientId = '50'; // troquei a vari√°vel do tipo number pra uma do tipo string
console.log(typeof patientId); // o javascript j√° reconhece que o tipo primitivo √© outro, essa √© a famosa tipagem din√¢mica
*/
/*
Tipos primitivos, tipagem din√¢mica e opera√ß√µes aritm√©ticas
    #para fixar

- Crie uma constante chamada base e atribua a ela o valor 5.
- Crie uma constante uma chamada heigth e atribua a ela o valor 8.
- Crie uma constante chamada area e atribua a ela o resultado da multiplica√ß√£o da - base pela heigth. Dica: lembre-se de usar sempre o console.log() para imprimir as vari√°veis e checar os resultados das opera√ß√µes!
- Crie uma constante chamada perimeter e atribua a ela a soma de todos os lados do ret√¢ngulo.
*/

const base = 5;
const height = 8;
const area = base * height;

console.log(base);
console.log(height);
console.log(area);

const perimeter = base + base + height + height;
console.log(perimeter);

